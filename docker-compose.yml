version: '3'

services:

  initializer:
    build:
      context: ./initializer
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: jackpotian
      DB_PASSWORD: ${DB_PASSWORD}
      AWS_KEY: ${AWS_KEY}
      AWS_SECRET: ${AWS_SECRET}
      S3_ENDPOINT: http://minio:9000
      BUCKET_NAME: model
      CASSANDRA_HOST: cassandra
      CASSANDRA_PORT: 9042
    depends_on:
      - db
      - minio

  arm-selector:
    build:
      context: ./arm-selector
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    environment:
      EXPERIMENTS_PARAMS_SERVICE_URL: http://experiments-params:8091/api/v1/experiment/
      REWARD_PREDICTOR_URL: http://reward-predictor:8092/api/v1/prediction
      GIN_MODE: release
    depends_on:
      - experiments-params
      - reward-predictor

  experiments-params:
    build:
      context: ./experiments-params
      dockerfile: Dockerfile
    ports:
      - "8091:8091"
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: jackpotian
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: experiment_db
      GIN_MODE: release
    depends_on:
      - initializer

  reward-predictor:
    build:
      context: ./reward-predictor
      dockerfile: Dockerfile
    ports:
      - "8092:8092"
    environment:
      AWS_KEY: ${AWS_KEY}
      AWS_SECRET: ${AWS_SECRET}
      ENDPOINT: http://minio:9000
      S3_FORCE_PATH_STYLE: "true"
      GIN_MODE: release
    depends_on:
      - initializer

  db:
    image: mysql:8.0
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: testroot
      MYSQL_USER: jackpotian
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: experiment_db

  minio:
    image: minio/minio:RELEASE.2023-10-07T15-07-38Z
    environment:
      MINIO_ACCESS_KEY: ${AWS_KEY}
      MINIO_SECRET_KEY: ${AWS_SECRET}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: server /data --console-address :9001

  rabbitmq:
    image: rodriecheconea/jackpot-rabbit
    ports:
      - "5672:5672"
      - "15672:15672"

  cassandra:
    build:
      context: ./rewards-service
      dockerfile: cassandra.dockerfile
    ports:
      - "9042:9042"

  reward-service:
    build:
      context: ./rewards-service
      dockerfile: Dockerfile
    environment:
      QUEUE_PORT: 5672
      QUEUE_URL: rabbitmq
      QUEUE_USER: jackpotRewardsService
      QUEUE_PASSWORD: ${QUEUE_PASSWORD}
      CASSANDRA_URL: localhost
      CASSANDRA_PORT: 9042
    depends_on:
      - initializer
      - cassandra
      - rabbitmq




# reward service <- tiene un .env que me lo va a pasar rodri.
# SQS QUEUE
# model trainer

volumes:
  minio-data:

